/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Answers;

import java.awt.HeadlessException;
import java.io.File;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author t00171168
 */
public class AnswersPage extends javax.swing.JFrame {

    /**
     * Creates new form AnswersPage
     */
    public AnswersPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        questionText = new javax.swing.JTextField();
        currentUser = new javax.swing.JLabel();
        answerPanel = new javax.swing.JPanel();
        numLikes = new javax.swing.JLabel();
        likes = new javax.swing.JLabel();
        txtUsername = new javax.swing.JLabel();
        datePosted = new javax.swing.JLabel();
        likeButton = new javax.swing.JButton();
        dislikeButton = new javax.swing.JButton();
        removeAnswer = new javax.swing.JButton();
        answerID = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        viewTxtAnswer = new javax.swing.JTextPane();
        profileImage = new javax.swing.JLabel();
        noAnswersTxt = new javax.swing.JTextField();
        questionID = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        newTxtAnswer = new javax.swing.JTextArea();
        txtAnswer = new javax.swing.JButton();
        uploadVideoAnswer = new javax.swing.JButton();
        filePath = new javax.swing.JTextField();
        selectVideoFile = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        answersTable = new javax.swing.JTable();
        viewSelectedAnswer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        questionText.setEditable(false);
        questionText.setText("How do you use loops in PL/SQL");
        getContentPane().add(questionText, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 31, 655, 52));

        currentUser.setText("T00171168");
        getContentPane().add(currentUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, -1, -1));

        numLikes.setText("0");

        likes.setText("Likes:");

        txtUsername.setText("UserName:");

        datePosted.setText("00-00-0000");

        likeButton.setText("Like");
        likeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                likeButtonMouseClicked(evt);
            }
        });

        dislikeButton.setText("Dislike");
        dislikeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dislikeButtonMouseClicked(evt);
            }
        });

        removeAnswer.setText("Remove");
        removeAnswer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeAnswerMouseClicked(evt);
            }
        });

        answerID.setText("ID");

        viewTxtAnswer.setEditable(false);
        viewTxtAnswer.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(viewTxtAnswer);

        javax.swing.GroupLayout answerPanelLayout = new javax.swing.GroupLayout(answerPanel);
        answerPanel.setLayout(answerPanelLayout);
        answerPanelLayout.setHorizontalGroup(
            answerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(answerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(answerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(answerPanelLayout.createSequentialGroup()
                        .addComponent(txtUsername)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(answerID))
                    .addGroup(answerPanelLayout.createSequentialGroup()
                        .addComponent(profileImage, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(answerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(answerPanelLayout.createSequentialGroup()
                                .addComponent(likes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numLikes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addComponent(datePosted)
                                .addGap(34, 34, 34)
                                .addComponent(likeButton)
                                .addGap(18, 18, 18)
                                .addComponent(dislikeButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(removeAnswer))
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );
        answerPanelLayout.setVerticalGroup(
            answerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(answerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(answerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUsername)
                    .addComponent(answerID, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(answerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(profileImage, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(answerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(likes)
                    .addComponent(datePosted)
                    .addComponent(likeButton)
                    .addComponent(dislikeButton)
                    .addComponent(removeAnswer)
                    .addComponent(numLikes))
                .addContainerGap())
        );

        getContentPane().add(answerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 480, -1));

        noAnswersTxt.setEditable(false);
        getContentPane().add(noAnswersTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 378, 35));

        questionID.setText("2");
        getContentPane().add(questionID, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 90, 16, -1));

        newTxtAnswer.setColumns(20);
        newTxtAnswer.setRows(5);
        newTxtAnswer.setInheritsPopupMenu(true);
        jScrollPane1.setViewportView(newTxtAnswer);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 460, 72));

        txtAnswer.setText("Post Answer");
        txtAnswer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAnswerMouseClicked(evt);
            }
        });
        getContentPane().add(txtAnswer, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 610, 100, 40));

        uploadVideoAnswer.setText("Post Video Answer");
        uploadVideoAnswer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadVideoAnswerMouseClicked(evt);
            }
        });
        getContentPane().add(uploadVideoAnswer, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 600, 130, 40));
        getContentPane().add(filePath, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 550, 330, 30));

        selectVideoFile.setText("Select a Video");
        selectVideoFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectVideoFileMouseClicked(evt);
            }
        });
        getContentPane().add(selectVideoFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 520, -1, -1));

        answersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Answer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        answersTable.setColumnSelectionAllowed(true);
        answersTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        answersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(answersTable);
        answersTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (answersTable.getColumnModel().getColumnCount() > 0) {
            answersTable.getColumnModel().getColumn(0).setResizable(false);
            answersTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            answersTable.getColumnModel().getColumn(1).setResizable(false);
        }
        answersTable.getAccessibleContext().setAccessibleParent(this);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 850, 160));

        viewSelectedAnswer.setText("View Selected Answer");
        viewSelectedAnswer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewSelectedAnswerMouseClicked(evt);
            }
        });
        getContentPane().add(viewSelectedAnswer, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void likeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_likeButtonMouseClicked
      
        Like like = new Like();
        LikeDAO dao = new LikeDAO();

        like.setAnswerID(Integer.parseInt(answerID.getText()));
        like.setTNumber(currentUser.getText());
        dao.createLike(like);
        
        loadSelectedAnswer();

    }//GEN-LAST:event_likeButtonMouseClicked

    private void dislikeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dislikeButtonMouseClicked

        Dislike dislike = new Dislike();
        DislikeDAO dao = new DislikeDAO();

        dislike.setAnswerID(Integer.parseInt(answerID.getText()));
        dislike.setTNumber(currentUser.getText());

        dao.createDislike(dislike);
        
        loadSelectedAnswer();

    }//GEN-LAST:event_dislikeButtonMouseClicked

    private void removeAnswerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeAnswerMouseClicked

        AnswerDAO dao = new AnswerDAO();
        dao.removeAnswer(currentUser.getText(),Integer.parseInt(answerID.getText()));
        load();
          

    }//GEN-LAST:event_removeAnswerMouseClicked

    private void txtAnswerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAnswerMouseClicked

        try {
            AnswerDAO ans = new AnswerDAO();

            TextAnswerImpl answer = new TextAnswerImpl();

            int nxtAnswerID = ans.getNextAnswerID();
            answer.setAnswerID(nxtAnswerID);

            String newUserAnswer = newTxtAnswer.getText();
            answer.setAnswerText(newUserAnswer);

            String tnumber = currentUser.getText();
            answer.setTNumber(tnumber);

            DateFormat dateFormat = new SimpleDateFormat("dd/MMM/yyyy");
            Calendar cal = Calendar.getInstance();
            String datePosted = dateFormat.format(cal.getTime());
            answer.setDatePosted(datePosted);

            int newQuestionID = Integer.parseInt(questionID.getText());
            answer.setQuestionID(newQuestionID);

            //every new answer has default likes 0
            answer.setLikes(0);

            ans.createTextAnswer(answer);

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

        JOptionPane.showMessageDialog(null,"Your answer has been successfullt uploaded");
        newTxtAnswer.setText("");
        load();

    }//GEN-LAST:event_txtAnswerMouseClicked

    private void uploadVideoAnswerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadVideoAnswerMouseClicked

        if(filePath.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Please select a file to upload");
        }
        else{
        try {
            AnswerDAO ans = new AnswerDAO();

            VideoAnswerImpl video = new VideoAnswerImpl();
            
            File videoFile = new File(filePath.getText());
            video.setVideo(videoFile);

            int nxtAnswerID = ans.getNextAnswerID();
            video.setAnswerID(nxtAnswerID);

            String tnumber = currentUser.getText();
            video.setTNumber(tnumber);

            DateFormat dateFormat = new SimpleDateFormat("dd/MMM/yyyy");
            Calendar cal = Calendar.getInstance();
            String uploadDate = dateFormat.format(cal.getTime());
            video.setDatePosted(uploadDate);

            int newQuestionID = Integer.parseInt(questionID.getText());
            video.setQuestionID(newQuestionID);

            //every new answer has default likes 0
            video.setLikes(0);

            ans.createVideoAnswer(video);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
        JOptionPane.showMessageDialog(null,"Your answer has been successfullt uploaded");
        load();
        filePath.setText("");
        }

    }//GEN-LAST:event_uploadVideoAnswerMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        load();
    }//GEN-LAST:event_formWindowOpened

    private void load() throws NumberFormatException, HeadlessException {
        AnswerDAO dao = new AnswerDAO();
        
        try {
           
            ResultSet resSet = dao.getAnswers(Integer.parseInt(questionID.getText()));
            
            if(resSet==null){
                answersTable.setVisible(false);
                noAnswersTxt.setVisible(true);
                answerPanel.setVisible(false);
                noAnswersTxt.setText("No answer for the question");
                viewSelectedAnswer.setVisible(false);
            }
            else{
                //when answers are return the answersTable is populated with the data in resSet
                noAnswersTxt.setVisible(false);
                answersTable.setModel(DbUtils.resultSetToTableModel(resSet));
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void selectVideoFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectVideoFileMouseClicked
        
        JFileChooser videoChooser = new JFileChooser();
        videoChooser.showOpenDialog(this);
        
        filePath.setText(videoChooser.getSelectedFile().getPath());
        
        
    }//GEN-LAST:event_selectVideoFileMouseClicked

    private void viewSelectedAnswerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewSelectedAnswerMouseClicked
       
        loadSelectedAnswer();
        
    }//GEN-LAST:event_viewSelectedAnswerMouseClicked

    private void loadSelectedAnswer() throws HeadlessException {
        try{
            BigDecimal id = (BigDecimal)answersTable.getValueAt(answersTable.getSelectedRow(),0);
            
            int idAsInt = id.intValue();
            
            DisplayAnswer ans;
            
            AnswerDAO dao = new AnswerDAO();
            
            
            ans = dao.getAnswer(idAsInt);
            
            noAnswersTxt.setVisible(false);
            
            answerID.setText(Integer.toString(ans.getAnswerID()));
            
            numLikes.setText(Integer.toString(ans.getLikes()));
            
            viewTxtAnswer.setText(ans.getAnswerText());
            
            Format formatter = new SimpleDateFormat("dd-MMM-yyyy");
            String date = formatter.format(ans.getDatePosted());
            datePosted.setText(date);
            
            txtUsername.setText(ans.getUsername());
            
            byte[] image = ans.getProfileImage();
            ImageIcon icon = new ImageIcon(image);
            profileImage.setIcon(icon);
            
            answerPanel.setVisible(true);
            
        }
        catch(NullPointerException e){
            System.out.println(e.getMessage());
        }
        catch(ArrayIndexOutOfBoundsException ex){
            JOptionPane.showMessageDialog(null,"Please select an answer");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnswersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnswersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnswersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnswersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnswersPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel answerID;
    private javax.swing.JPanel answerPanel;
    private javax.swing.JTable answersTable;
    private javax.swing.JLabel currentUser;
    private javax.swing.JLabel datePosted;
    private javax.swing.JButton dislikeButton;
    private javax.swing.JTextField filePath;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton likeButton;
    private javax.swing.JLabel likes;
    private javax.swing.JTextArea newTxtAnswer;
    private javax.swing.JTextField noAnswersTxt;
    private javax.swing.JLabel numLikes;
    private javax.swing.JLabel profileImage;
    private javax.swing.JLabel questionID;
    private javax.swing.JTextField questionText;
    private javax.swing.JButton removeAnswer;
    private javax.swing.JButton selectVideoFile;
    private javax.swing.JButton txtAnswer;
    private javax.swing.JLabel txtUsername;
    private javax.swing.JButton uploadVideoAnswer;
    private javax.swing.JButton viewSelectedAnswer;
    private javax.swing.JTextPane viewTxtAnswer;
    // End of variables declaration//GEN-END:variables
}
